@inherits LayoutComponentBase

@inject IJSRuntime JSRuntime
@inject IConfigReader ConfigReader
@inject ISessionBasket SessionBasket
@inject NavigationManager NavigationManager
@inject ISessionBridgeVmManager SessionBridgeVmManager

<div class="wrapper">

    <!-- Navbar -->
    <nav class="main-header navbar navbar-expand navbar-white navbar-light">
        <!-- Right navbar links -->
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <button class="btn btn-link nav-item" @onclick="RefreshApp">
                    <i class="fa-sign-out mr-2"></i>Refresh
                    <span class="float-right text-muted text-sm"></span>
                </button>
            </li>
            <li>
                <button class="btn btn-link nav-item" @onclick="DestroySession">
                    <i class="fas fa-th-large"></i> Log out
                    <span class="float-right text-muted text-sm"></span>
                </button>
            </li>
        </ul>
    </nav>
    <!-- /.navbar -->
    <!-- Main Sidebar Container -->
    <aside class="main-sidebar sidebar-dark-danger elevation-4">
        <!-- Brand Logo -->
        <a href="refresh_app/@key" class="brand-link">
            <img src="images/AdminLTELogo.png" alt="NBS Logo" class="brand-image img-circle elevation-3"
                 style="opacity: .8">
            <span class="brand-text font-weight-light">Bancassurance</span>
        </a>

        <!-- Sidebar -->
        <div class="sidebar">
            <!-- Sidebar user panel (optional) -->
            <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                <div class="image">
                    <img src="images/user_ico.png" class="img-circle elevation-2" alt="User Image">
                </div>
                <div class="info">
                    <a href="refresh_app/@key" class="d-block">@fullname</a>
                </div>
            </div>

            <!-- Sidebar Menu -->
            <nav class="mt-2">
                <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                    <!-- Add icons to the links using the .nav-icon class
    with font-awesome or any other icon font library -->
                    <li class="nav-item">
                        <a href="router/home" class="nav-link">
                            <i class="far fa-circle nav-icon"></i>
                            <p>Home</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="router/unsubscriptions" class="nav-link">
                            <i class="far fa-circle nav-icon"></i>
                            <p>Requests</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="router/policies" class="nav-link">
                            <i class="far fa-circle nav-icon"></i>
                            <p>Policies</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="router/white_listed_accounts" class="nav-link">
                            <i class="far fa-circle nav-icon"></i>
                            <p>Special Accounts</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="router/members" class="nav-link">
                            <i class="far fa-circle nav-icon"></i>
                            <p>Members</p>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="router/accounts" class="nav-link">
                            <i class="far fa-circle nav-icon"></i>
                            <p>Accounts</p>
                        </a>
                    </li>
                </ul>
            </nav>
            <!-- /.sidebar-menu -->
        </div>
        <!-- /.sidebar -->
    </aside>

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1 class="m-0 text-dark"></h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="#"></a></li>
                            <li class="breadcrumb-item active"></li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.content-header -->
        <!-- Main content -->
        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        @Body
                    </div>
                </div>
                <!-- /.row -->
            </div><!-- /.container-fluid -->
        </div>
        <!-- /.content -->
        <!-- Extra Space Between Content and Footer -->
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                </div>
            </div>
        </div>
    </div>
    <!-- /.content-wrapper -->

    <ControlSidebar></ControlSidebar>

    <Footer></Footer>
</div>

@code {

    string key;
    string fullname;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            var keyAsObject = await JSRuntime.InvokeAsync<object>("GetUrlKey");

            if (keyAsObject is null) return;

            key = Convert.ToString(keyAsObject);

            var sessionBridge = SessionBridgeVmManager.GetFromBasket(key);
            if (sessionBridge is null) return;

            fullname = sessionBridge.FullName;
        }
        catch (Exception)
        {
            key = null;
        }
    }

    private void RefreshApp()
    {
        if (string.IsNullOrEmpty(key)) return;

        NavigationManager.NavigateTo($"refresh_app/{key}");
    }

    private void DestroySession()
    {
        if (!string.IsNullOrEmpty(key))
        {
            SessionBasket.Remove(key);
        }

        NavigationManager.NavigateTo(ConfigReader.Read("VasPortalUrl"));
    }

}